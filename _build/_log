### Starting build.
# Target: render.mli.depends, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), extension:mli, file:render.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -modules render.mli > render.mli.depends # cached
# Target: render.cmi, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), byte, compile, extension:mli, file:render.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -o render.cmi render.mli # cached
# Target: render.ml.depends, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), extension:ml, file:render.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -modules render.ml > render.ml.depends # cached
# Target: texturemap.mli.depends, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), extension:mli, file:texturemap.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -modules texturemap.mli > texturemap.mli.depends # cached
# Target: texturemap.cmi, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), byte, compile, extension:mli, file:texturemap.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -o texturemap.cmi texturemap.mli # cached
# Target: render.cmo, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:render.cmo, file:render.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -o render.cmo render.ml # cached
# Target: main.ml.depends, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -modules main.ml > main.ml.depends # cached
# Target: main.cmo, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -o main.cmo main.ml # cached
# Target: authors.mli.depends, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), extension:mli, file:authors.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -modules authors.mli > authors.mli.depends # cached
# Target: authors.cmi, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), byte, compile, extension:mli, file:authors.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -o authors.cmi authors.mli # cached
# Target: authors.ml.depends, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), extension:ml, file:authors.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -modules authors.ml > authors.ml.depends # cached
# Target: authors.cmo, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:authors.cmo, file:authors.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -o authors.cmo authors.ml # cached
# Target: texturemap.ml.depends, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), extension:ml, file:texturemap.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -modules texturemap.ml > texturemap.ml.depends # cached
# Target: texturemap.cmo, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:texturemap.cmo, file:texturemap.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -o texturemap.cmo texturemap.ml # cached
# Target: game.mli.depends, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), extension:mli, file:game.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -modules game.mli > game.mli.depends # cached
# Target: game.cmi, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), byte, compile, extension:mli, file:game.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -o game.cmi game.mli # cached
# Target: game.ml.depends, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), extension:ml, file:game.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -modules game.ml > game.ml.depends # cached
# Target: dungeon.mli.depends, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), extension:mli, file:dungeon.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -modules dungeon.mli > dungeon.mli.depends # cached
# Target: dungeon.cmi, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), byte, compile, extension:mli, file:dungeon.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -o dungeon.cmi dungeon.mli # cached
# Target: game.cmo, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:game.cmo, file:game.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -o game.cmo game.ml # cached
# Target: dungeon.ml.depends, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), extension:ml, file:dungeon.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -modules dungeon.ml > dungeon.ml.depends
# Target: dungeon.cmo, tags: { package(camlimages.core), package(camlimages.png), package(lablgl), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:dungeon.cmo, file:dungeon.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package lablgl -package ounit2 -package camlimages.core -package camlimages.png -package yojson -o dungeon.cmo dungeon.ml
# Compilation successful.
